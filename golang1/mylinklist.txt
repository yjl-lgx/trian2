package main 
import "fmt"

type MyNode struct{
	Data int
	Next *MyNode
}

func Getfirst(h *MyNode) *MyNode {
	if h.Next == nil{
		return nil
	}
	return h.Next
} 

func GetLast(h *MyNode) *MyNode {
	if h.Next == nil {
		return nil
	}
	i := h
	for i.Next != nil {
		if i.Next == nil {
			return i
		}
	}
	return nil
}

func GetLength(h *MyNode) int {
	var i int = 0
	n := h 
	for n.Next != nil{
		i++
		n = n.Next
	}
	return i
}

func Insert(h,d *MyNode,p int) bool {
	if h.Next == nil {
		h.Next = d
		return true
	}
	i := 0
	n := h
	for n.Next != nil {
		i++
		if i == p {
			if n.Next.Next == nil {
				n.Next = d 
				return true
			}else{
				d.Next = n.Next
				n.Next = d.Next
				return true 
			}
		}
		n = n.Next
		if n.Next == nil {
			n.Next = d 
			return true 
		}
	}
	return false	
}		

func Getdate(h *MyNode,p int) *MyNode {
	if p < 0 || p > GetLength(h) {
		return nil 
	}
	var i int = 0
	n := h
	for n.Next != nil {
		i++
		n = n.Next
		if i == p {
			return n
		}
	}
	return nil 
}

func main() {
	var h MyNode
	for i := 1;i <= 10;i++ {
		var d MyNode
		d.Data = i
		Insert(&h,&d,i)
		fmt.Println(Getdate(&h, i))
	}
	fmt.Println(GetLength(&h))
	fmt.Println(Getfirst(&h))
	fmt.Println(GetLast(&h))
	fmt.Println(Getdate(&h, 8))
}